<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<article xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="docBook-introduction">
    <info>
        <title>简介</title>
    </info>
    <para>
        DocBook 是一种模式（在多种语言下可用，包括RELAX NG、SGML 和 XML DTDs ，以及 W3C XML 模式），它由OASIS 的DocBook 技术委员会维护。它非常适合于关于计算机硬件和软件的书籍和论文（虽然它绝不限于这些应用）。
        　　因为它是一个大而强壮的模式，因为它的主要结构符合一般概念所构成的"书"，DocBook 已被一个庞大而且还在成长中的作者群用于所有种类书籍的编写。DocBook 由一系列商业工具支持"out of box"，并且大量自由软件环境也在迅速扩大对它的支持。这些特性结合起来使得 DocBook 成为一种易于理解、广泛应用和非常受欢迎的模式。全世界有许多组织将 DocBook 用于数百万页的文档，这些文档有不同的打印和在线格式。
        　　SGML vs. XML
        　　DocBook 委员会维护 DocBook DTD 的SGML 和 XML 版本和其他语言的XML 版本。这在一定程度上是可行的，这些DTD 也是一致的。这些DTD 中没有故意的不同，它们假定接受一样的文档集。 
    </para>
 
    <section >
        <title>遇到的问题</title>
        <para>
        <itemizedlist>
            <listitem>
                <para>内容与格式分离.写文档的时候，不得不兼顾文档的格式，这是件很头痛的事情,经常是最后不得不Review好几遍，就是为了统一格式，即使使用模板也不能避免这个问题。</para>
            </listitem>
            <listitem>
                <para>无法进行有效的版本控制，因为Word保存的是二进制格式，这就不能使用CVS的版本控制功能，只能手工合并，这样很容易出错。虽然Word现在也可以保存成XML，但是看一下保存的文件就会发现，格式和内容混杂在一起，简直没法看。况且，版本控制的时候，我们注重的往往是内容，现在却不得不处理大量的格式信息.</para>
            </listitem>
            <listitem>
                <para>可移植性问题，毕竟Word只能运行在Windows平台上，即使可以保存为XML或者HTML，在其他平台上很难修改</para>
            </listitem>
            <listitem>
                <para>用盗版还是正版的问题</para>
            </listitem>
        </itemizedlist>
        </para>
    </section>
    <section>
        <title>优点</title>
        <para>
            <itemizedlist>
                <listitem>
                    <para>内容与格式分离</para>
                    <para>你只需要专注于文档的内容。文章的内容和格式是分离的。Docbook定义了诸如章节(chapter)、段落(para)、表格(table)这些文档元素，但如何显示这些元素，则由样式表(XSL)来控制，你不必在文档中嵌入排版信息。
                        
                        这也意味着，你不能用”所见即所得”的方式来编辑你的文档了。不过，你很快就会喜欢上内容和格式分离的，因为这不仅节省了排版的时间、也使文档样式更为统一。另外，使用程序自动处理文档也变得更加容易了。 </para>
                </listitem>
                <listitem>
                    <para>
                        多种文件格式输出
                    </para>
                    <para>只需要书写文档一次，就能够以多种文件格式输出。有很多免费的工具可以将Docbook文档转换成HTML、PDF，以及其它各种文件格式。 </para>
                </listitem>
                <listitem>
                    <para>便于版本管理</para>
                    <para>
                        Docbook的文档源文件是文本文件，因此可以方便的使用cvs, subversion, git等版本管理工具进行版本管理。 
                    </para>
                </listitem>
                <listitem>
                    <para>方便阅读</para>
                    <para>只要使用一个再普通不过的文本编辑器，就可以阅读、编辑Docbook的文档，因为它只是一个普通的文本文件</para>
                </listitem>
                <listitem>
                    <para>多平台支持</para>
                    <para>Docbook是文本文档，因此，无论你是在windows下还是Linux下，都可以阅读、书写文档。而Docbook的转换工具大多由Java编写，也支持跨平台运行。这样一来，你可以在多种操作系统平台下使用统一的方式来管理你的文档了。 </para>
                </listitem>
                <listitem>
                    <para>多语言支持</para>
                    <para>Docbook使用UTF-8字符集，因此，在文档中可以使用多国语言的字符集。这对国际化合作的项目来说很重要。 </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>
    
</article>
